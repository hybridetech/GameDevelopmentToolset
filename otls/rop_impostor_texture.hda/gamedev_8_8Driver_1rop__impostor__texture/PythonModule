def forcecookSDF():
    hou.node("../objnet1/SourceGeometry_SDF/cop2net1/file").parm("reload").pressButton()
    hou.node("../objnet1/SourceGeometry_SDF/trace1").cook(force=True,frame_range=(1,1))
    hou.node("../objnet1/SourceGeometry_SDF/output2").cook(force=True,frame_range=(1,1))
    hou.node("../cop2net1/sopimport1").cook(force=True,frame_range=(1,1))

def createAnimationCOPNetwork(hda, frames):
    cop = hda.node("animation_cop")
    
    prevComp = []
    for slice in range(frames):
        read = cop.createNode('file')
        mosaic = read.createOutputNode('mosaic')
        crop = mosaic.createOutputNode('crop')
        xform = crop.createOutputNode('xform')
        composite = xform.createOutputNode('composite')
        
        #file node changes
        unexpandedPath = hda.parm('anim_output_sequence').unexpandedString()
        #filePath = unexpandedPath.replace('$HIP', hou.expandString('$HIP'))
        filePath = unexpandedPath.replace('${OS}', hda.name())
        rot = (360.0/(frames - 1)) * slice
        rot = '%.6f' % rot
        wedge = '_wedge_rotation_%s' % rot
        filePath = filePath.replace('${WEDGE}', wedge)
        read.parm('filename1').set(filePath)
        
        #mosaic node changes
        mosaic.parm('numperline').set(1)
        totalFrames = hda.parm('anim_framesy').eval() - hda.parm('anim_framesx').eval() + 1
        mosaic.parm('imagelimit').set(totalFrames)
        
        #crop node changes
        crop.parm('hcrop2').set(slice + 1)
        
        #xform node changes
        xform.parm('units').set(1)
        resx = int(hda.parm('sprite_resx').eval())
        xform.parm('tx').set(resx * slice)
        
        if prevComp:
            prevComp.setInput(1, xform)
            composite.setInput(0, prevComp)
        #prevComp = composite
        
        if (slice == frames - 1):
            composite.destroy()
        else:
            prevComp = composite
            
    cropCleanup = prevComp.createOutputNode('crop')
    out = cropCleanup.createOutputNode('null','BEAUTY')
    out.setDisplayFlag(1)